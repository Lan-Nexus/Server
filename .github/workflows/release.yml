name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags like v1.0.0, v1.2.3, etc.

permissions:
  contents: write
  actions: read

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "package-lock.json"

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == refs/tags/* ]]; then
          tagName="${{ github.ref_name }}"
          version="${tagName#v}"
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "Extracted version: $version"
            else
          version="0.0.0-dev"
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "Using development version: $version"
          fi

      - name: Update package.json version (temporary for build)
        run: |
          version="${{ steps.get_version.outputs.version }}"
          jq --arg v "$version" '.version = $v' package.json > package.tmp.json
          mv package.tmp.json package.json
          echo "Updated package.json version to: $version (temporary for build only)"

      - name: Install server dependencies
        run: npm ci

      - name: Build Server
        run: npm run build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy .env.example to build directory
        run: cp .env.example dist/.env

      - name: Zip Build
        run: |
          cd dist
          zip -r ../server-build.zip .

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            server-build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
